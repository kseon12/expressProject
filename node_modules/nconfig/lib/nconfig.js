var path = require('path');
var _ = require('underscore');
var underscoreDeepExtend = require('underscore-deep-extend');

_.mixin({
	"deepExtend": underscoreDeepExtend(_)
});

module.exports = function (options) {
	options = options || {};

	var self = {
		"options": options,
		"CONFIG_FILE_EXT": 'json'
	};

	self.options.path = self.options.path || path.join(path.dirname(module.parent.parent.filename), 'config');

	self.configPath = function (env) {
		var filePath = path.join(self.options.path, env + '.' + self.CONFIG_FILE_EXT);

		return filePath;
	};

	self.loadSync = function (env, mergeWithEnv) {
		var getConfig = require('./getConfigSync');

		if (!env) {
			throw Error("Parameter 'env' is required.")
		}

		var loadSyncRecursive = function (env, mergeWithEnv, mergedConfig) {
			var fileEnv = self.configPath(env);
			var envConfig = getConfig(fileEnv) || {};
			if (_.isArray(mergeWithEnv)) {
				_.deepExtend(mergedConfig, envConfig);

				var nextEnv = mergeWithEnv.pop();

				if (nextEnv) {
					return loadSyncRecursive(nextEnv, mergeWithEnv, mergedConfig);
				} else {
					return mergedConfig;
				}
			} else {
				return envConfig;
			}
		};

		if (!_.isArray(mergeWithEnv)) {
			if (_.isString(mergeWithEnv) && env !== mergeWithEnv && mergeWithEnv !== '') {
				mergeWithEnv = [ env, mergeWithEnv ];
			} else {
				mergeWithEnv = [ env ];
			}
		} else if (mergeWithEnv.indexOf(env) === -1) {
			mergeWithEnv.unshift(env);
		}

		var selfIndex    = mergeWithEnv.indexOf(env);
		var mergeWithEnv = _.rest(mergeWithEnv, selfIndex);
		var nextEnv      = mergeWithEnv.pop();

		return loadSyncRecursive(nextEnv, mergeWithEnv, {});
	};

	return self;
};
